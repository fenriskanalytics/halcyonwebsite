// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 4ek7yevYSmZU9MaEHzjjyJ
// Component: OPun2yHK_93c
import * as React from "react";
import { useRouter } from "next/router";
import {
  PlasmicImg as PlasmicImg__,
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  hasVariant
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import NewsletterComponent from "../../NewsletterComponent"; // plasmic-import: FL9UE5cenYH-/component
import { useScreenVariants as useScreenVariantsqAyk5ZgNfB } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: q_ayk5ZGNfB_/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 4ek7yevYSmZU9MaEHzjjyJ/projectcss
import sty from "./PlasmicSectionMeetTheTeam.module.css"; // plasmic-import: OPun2yHK_93c/css

createPlasmicElementProxy;

export const PlasmicSectionMeetTheTeam__VariantProps = new Array();

export const PlasmicSectionMeetTheTeam__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicSectionMeetTheTeam__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsqAyk5ZgNfB()
  });
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        sty.root
      )}
    >
      <section
        data-plasmic-name={"section"}
        data-plasmic-override={overrides.section}
        className={classNames(projectcss.all, sty.section)}
      >
        <Stack__
          as={"div"}
          data-plasmic-name={"freeBox"}
          data-plasmic-override={overrides.freeBox}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox)}
        >
          <h2
            data-plasmic-name={"h2"}
            data-plasmic-override={overrides.h2}
            className={classNames(
              projectcss.all,
              projectcss.h2,
              projectcss.__wab_text,
              sty.h2
            )}
          >
            {hasVariant(globalVariants, "screen", "mobileOnly")
              ? "Meet the Team"
              : "Meet our Instructors & Staff"}
          </h2>
          <PlasmicImg__
            data-plasmic-name={"img"}
            data-plasmic-override={overrides.img}
            alt={""}
            className={classNames(sty.img)}
            displayHeight={"auto"}
            displayMaxHeight={"none"}
            displayMaxWidth={"800px"}
            displayMinHeight={"0"}
            displayMinWidth={"0"}
            displayWidth={"auto"}
            loading={"lazy"}
            src={{
              src: "/plasmic/halcyon_website/images/image13.png",
              fullWidth: 4096,
              fullHeight: 2732,
              aspectRatio: undefined
            }}
          />

          <div
            data-plasmic-name={"text"}
            data-plasmic-override={overrides.text}
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text
            )}
          >
            {"Individual Teacher Bios Coming Soon"}
          </div>
        </Stack__>
        <NewsletterComponent
          data-plasmic-name={"newsletterComponent"}
          data-plasmic-override={overrides.newsletterComponent}
          className={classNames("__wab_instance", sty.newsletterComponent)}
        />
      </section>
    </div>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "section",
    "freeBox",
    "h2",
    "img",
    "text",
    "newsletterComponent"
  ],

  section: ["section", "freeBox", "h2", "img", "text", "newsletterComponent"],
  freeBox: ["freeBox", "h2", "img", "text"],
  h2: ["h2"],
  img: ["img"],
  text: ["text"],
  newsletterComponent: ["newsletterComponent"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicSectionMeetTheTeam__ArgProps,
          internalVariantPropNames: PlasmicSectionMeetTheTeam__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicSectionMeetTheTeam__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicSectionMeetTheTeam";
  } else {
    func.displayName = `PlasmicSectionMeetTheTeam.${nodeName}`;
  }
  return func;
}

export const PlasmicSectionMeetTheTeam = Object.assign(
  // Top-level PlasmicSectionMeetTheTeam renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    section: makeNodeComponent("section"),
    freeBox: makeNodeComponent("freeBox"),
    h2: makeNodeComponent("h2"),
    img: makeNodeComponent("img"),
    text: makeNodeComponent("text"),
    newsletterComponent: makeNodeComponent("newsletterComponent"),
    // Metadata about props expected for PlasmicSectionMeetTheTeam
    internalVariantProps: PlasmicSectionMeetTheTeam__VariantProps,
    internalArgProps: PlasmicSectionMeetTheTeam__ArgProps
  }
);

export default PlasmicSectionMeetTheTeam;
/* prettier-ignore-end */
