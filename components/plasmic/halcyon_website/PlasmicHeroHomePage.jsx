// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 4ek7yevYSmZU9MaEHzjjyJ
// Component: FTD1V6ByjhQi
import * as React from "react";
import { useRouter } from "next/router";
import {
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import NewsletterComponent from "../../NewsletterComponent"; // plasmic-import: FL9UE5cenYH-/component
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 4ek7yevYSmZU9MaEHzjjyJ/projectcss
import sty from "./PlasmicHeroHomePage.module.css"; // plasmic-import: FTD1V6ByjhQi/css

createPlasmicElementProxy;

export const PlasmicHeroHomePage__VariantProps = new Array();

export const PlasmicHeroHomePage__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHeroHomePage__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        sty.root
      )}
    >
      <section
        data-plasmic-name={"heroSection"}
        data-plasmic-override={overrides.heroSection}
        className={classNames(projectcss.all, sty.heroSection)}
      >
        <Stack__
          as={"div"}
          data-plasmic-name={"freeBox"}
          data-plasmic-override={overrides.freeBox}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox)}
        >
          <h2
            data-plasmic-name={"h2"}
            data-plasmic-override={overrides.h2}
            className={classNames(
              projectcss.all,
              projectcss.h2,
              projectcss.__wab_text,
              sty.h2
            )}
          >
            {"Tampa's First Luxury Studio"}
          </h2>
          <div
            data-plasmic-name={"text"}
            data-plasmic-override={overrides.text}
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text
            )}
          >
            {
              "Yoga is a journey of self-discovery, a path to finding your focus, and a means of pushing personal limits. We offer a refined and authentic yoga experience, embracing the purity of its practice. Join us in the pursuit of inner balance, strength, and tranquility, where yoga is about reconnecting with yourself and finding your own path to well-being."
            }
          </div>
        </Stack__>
        <NewsletterComponent
          data-plasmic-name={"newsletterComponent"}
          data-plasmic-override={overrides.newsletterComponent}
          className={classNames("__wab_instance", sty.newsletterComponent)}
        />
      </section>
    </div>
  );
}

const PlasmicDescendants = {
  root: ["root", "heroSection", "freeBox", "h2", "text", "newsletterComponent"],
  heroSection: ["heroSection", "freeBox", "h2", "text", "newsletterComponent"],
  freeBox: ["freeBox", "h2", "text"],
  h2: ["h2"],
  text: ["text"],
  newsletterComponent: ["newsletterComponent"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHeroHomePage__ArgProps,
          internalVariantPropNames: PlasmicHeroHomePage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHeroHomePage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHeroHomePage";
  } else {
    func.displayName = `PlasmicHeroHomePage.${nodeName}`;
  }
  return func;
}

export const PlasmicHeroHomePage = Object.assign(
  // Top-level PlasmicHeroHomePage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    heroSection: makeNodeComponent("heroSection"),
    freeBox: makeNodeComponent("freeBox"),
    h2: makeNodeComponent("h2"),
    text: makeNodeComponent("text"),
    newsletterComponent: makeNodeComponent("newsletterComponent"),
    // Metadata about props expected for PlasmicHeroHomePage
    internalVariantProps: PlasmicHeroHomePage__VariantProps,
    internalArgProps: PlasmicHeroHomePage__ArgProps
  }
);

export default PlasmicHeroHomePage;
/* prettier-ignore-end */
