// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 4ek7yevYSmZU9MaEHzjjyJ
// Component: URdOjkWq8M7r
import * as React from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import HalcyonNavBar from "../../HalcyonNavBar"; // plasmic-import: UDe2_-rIrkzi/component
import BannerPolicies from "../../BannerPolicies"; // plasmic-import: 96Dpxbdurlwm/component
import ContainerCookiesPolicy from "../../ContainerCookiesPolicy"; // plasmic-import: AvYJy3RYh00v/component
import HalcyonFooter from "../../HalcyonFooter"; // plasmic-import: WgtcOX7lLlZ3/component
import HalcyonFooterBottom from "../../HalcyonFooterBottom"; // plasmic-import: DyM3o4afMIzM/component
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 4ek7yevYSmZU9MaEHzjjyJ/projectcss
import sty from "./PlasmicCookiesPolicy.module.css"; // plasmic-import: URdOjkWq8M7r/css

createPlasmicElementProxy;

export const PlasmicCookiesPolicy__VariantProps = new Array();

export const PlasmicCookiesPolicy__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicCookiesPolicy__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicCookiesPolicy.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicCookiesPolicy.pageMetadata.title}
        />

        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicCookiesPolicy.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            sty.root
          )}
        >
          <HalcyonNavBar
            data-plasmic-name={"halcyonNavBar"}
            data-plasmic-override={overrides.halcyonNavBar}
            className={classNames("__wab_instance", sty.halcyonNavBar)}
          />

          <BannerPolicies
            data-plasmic-name={"bannerPolicies"}
            data-plasmic-override={overrides.bannerPolicies}
            className={classNames("__wab_instance", sty.bannerPolicies)}
          />

          <section
            data-plasmic-name={"section"}
            data-plasmic-override={overrides.section}
            className={classNames(projectcss.all, sty.section)}
          >
            <ContainerCookiesPolicy
              data-plasmic-name={"containerCookiesPolicy"}
              data-plasmic-override={overrides.containerCookiesPolicy}
              className={classNames(
                "__wab_instance",
                sty.containerCookiesPolicy
              )}
            />
          </section>
          <HalcyonFooter
            data-plasmic-name={"halcyonFooter"}
            data-plasmic-override={overrides.halcyonFooter}
            className={classNames("__wab_instance", sty.halcyonFooter)}
          />

          <HalcyonFooterBottom
            data-plasmic-name={"halcyonFooterBottom"}
            data-plasmic-override={overrides.halcyonFooterBottom}
            className={classNames("__wab_instance", sty.halcyonFooterBottom)}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "halcyonNavBar",
    "bannerPolicies",
    "section",
    "containerCookiesPolicy",
    "halcyonFooter",
    "halcyonFooterBottom"
  ],

  halcyonNavBar: ["halcyonNavBar"],
  bannerPolicies: ["bannerPolicies"],
  section: ["section", "containerCookiesPolicy"],
  containerCookiesPolicy: ["containerCookiesPolicy"],
  halcyonFooter: ["halcyonFooter"],
  halcyonFooterBottom: ["halcyonFooterBottom"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicCookiesPolicy__ArgProps,
          internalVariantPropNames: PlasmicCookiesPolicy__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicCookiesPolicy__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicCookiesPolicy";
  } else {
    func.displayName = `PlasmicCookiesPolicy.${nodeName}`;
  }
  return func;
}

export const PlasmicCookiesPolicy = Object.assign(
  // Top-level PlasmicCookiesPolicy renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    halcyonNavBar: makeNodeComponent("halcyonNavBar"),
    bannerPolicies: makeNodeComponent("bannerPolicies"),
    section: makeNodeComponent("section"),
    containerCookiesPolicy: makeNodeComponent("containerCookiesPolicy"),
    halcyonFooter: makeNodeComponent("halcyonFooter"),
    halcyonFooterBottom: makeNodeComponent("halcyonFooterBottom"),
    // Metadata about props expected for PlasmicCookiesPolicy
    internalVariantProps: PlasmicCookiesPolicy__VariantProps,
    internalArgProps: PlasmicCookiesPolicy__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "Cookies Policy",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicCookiesPolicy;
/* prettier-ignore-end */
